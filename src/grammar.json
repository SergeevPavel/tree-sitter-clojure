{
  "name": "clojure",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_form"
      }
    },
    "comment": {
      "type": "PATTERN",
      "value": ";.*"
    },
    "_form": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_non_discard"
        },
        {
          "type": "SYMBOL",
          "name": "discard"
        }
      ]
    },
    "_non_discard": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_literal"
        },
        {
          "type": "SYMBOL",
          "name": "_reader_macro"
        }
      ]
    },
    "discard": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#_"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "discard"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_non_discard"
        }
      ]
    },
    "_reader_macro": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "anonymous_function"
        },
        {
          "type": "SYMBOL",
          "name": "meta_data"
        },
        {
          "type": "SYMBOL",
          "name": "regex"
        },
        {
          "type": "SYMBOL",
          "name": "var_quote"
        },
        {
          "type": "SYMBOL",
          "name": "set"
        },
        {
          "type": "SYMBOL",
          "name": "dispatch"
        },
        {
          "type": "SYMBOL",
          "name": "deref"
        },
        {
          "type": "SYMBOL",
          "name": "quote"
        },
        {
          "type": "SYMBOL",
          "name": "backtick"
        },
        {
          "type": "SYMBOL",
          "name": "unquote"
        },
        {
          "type": "SYMBOL",
          "name": "unquote_splicing"
        },
        {
          "type": "SYMBOL",
          "name": "gensym"
        },
        {
          "type": "SYMBOL",
          "name": "reader_conditional"
        },
        {
          "type": "SYMBOL",
          "name": "reader_conditional_splicing"
        },
        {
          "type": "SYMBOL",
          "name": "host_expression"
        }
      ]
    },
    "function_symbol": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "SYMBOL",
        "name": "_symbol"
      }
    },
    "anonymous_function": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_form"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "meta_data": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "#^"
            },
            {
              "type": "STRING",
              "value": "^"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "map"
            },
            {
              "type": "SYMBOL",
              "name": "symbol"
            },
            {
              "type": "SYMBOL",
              "name": "keyword"
            }
          ]
        }
      ]
    },
    "regex": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "var_quote": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#'"
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        }
      ]
    },
    "set": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_form"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "dispatch": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#"
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "SYMBOL",
          "name": "_form"
        }
      ]
    },
    "deref": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "@"
        },
        {
          "type": "SYMBOL",
          "name": "_form"
        }
      ]
    },
    "quote": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "SYMBOL",
          "name": "_form"
        }
      ]
    },
    "backtick": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "`"
        },
        {
          "type": "SYMBOL",
          "name": "_form"
        }
      ]
    },
    "unquote": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "~"
        },
        {
          "type": "SYMBOL",
          "name": "_form"
        }
      ]
    },
    "unquote_splicing": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "~@"
        },
        {
          "type": "SYMBOL",
          "name": "_form"
        }
      ]
    },
    "gensym": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_symbol"
          },
          {
            "type": "STRING",
            "value": "#"
          }
        ]
      }
    },
    "reader_conditional": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#?("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "keyword"
              },
              {
                "type": "SYMBOL",
                "name": "_form"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "reader_conditional_splicing": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#?@("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "keyword"
              },
              {
                "type": "SYMBOL",
                "name": "_form"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "host_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#+"
        },
        {
          "type": "SYMBOL",
          "name": "_form"
        },
        {
          "type": "SYMBOL",
          "name": "_form"
        }
      ]
    },
    "escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^xu0-7]"
              },
              {
                "type": "PATTERN",
                "value": "[0-7]{1,3}"
              },
              {
                "type": "PATTERN",
                "value": "x[0-9a-fA-F]{2}"
              },
              {
                "type": "PATTERN",
                "value": "u[0-9a-fA-F]{4}"
              },
              {
                "type": "PATTERN",
                "value": "u{[0-9a-fA-F]+}"
              }
            ]
          }
        ]
      }
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PATTERN",
                  "value": "[^\"\\\\]+"
                }
              },
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "character"
        },
        {
          "type": "SYMBOL",
          "name": "nil"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "keyword"
        },
        {
          "type": "SYMBOL",
          "name": "namespaced_keyword"
        },
        {
          "type": "SYMBOL",
          "name": "list"
        },
        {
          "type": "SYMBOL",
          "name": "vector"
        },
        {
          "type": "SYMBOL",
          "name": "map"
        }
      ]
    },
    "_simple_symbol": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[\\-+.]|([\\-+.][a-zA-Z*!_?$%&=<>'\\-+.#:][a-zA-Z*!_?$%&=<>'\\-+.#:0-9]*)|([a-zA-Z*!_?$%&=<>][a-zA-Z*!_?$%&=<>'\\-+.#:0-9]*)"
        },
        {
          "type": "STRING",
          "value": "/"
        }
      ]
    },
    "symbol_namespace": {
      "type": "PATTERN",
      "value": "[\\-+.]|([\\-+.][a-zA-Z*!_?$%&=<>'\\-+.#:][a-zA-Z*!_?$%&=<>'\\-+.#:0-9]*)|([a-zA-Z*!_?$%&=<>][a-zA-Z*!_?$%&=<>'\\-+.#:0-9]*)"
    },
    "symbol_name": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[\\-+.]|([\\-+.][a-zA-Z*!_?$%&=<>'\\-+.#:][a-zA-Z*!_?$%&=<>'\\-+.#:0-9]*)|([a-zA-Z*!_?$%&=<>][a-zA-Z*!_?$%&=<>'\\-+.#:0-9]*)"
      }
    },
    "_namespaced_symbol": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "symbol_namespace"
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "/"
          }
        },
        {
          "type": "SYMBOL",
          "name": "symbol_name"
        }
      ]
    },
    "_symbol": {
      "type": "CHOICE",
      "members": [
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "_simple_symbol"
          },
          "named": true,
          "value": "symbol_name"
        },
        {
          "type": "SYMBOL",
          "name": "_namespaced_symbol"
        }
      ]
    },
    "symbol": {
      "type": "SYMBOL",
      "name": "_symbol"
    },
    "keyword_prefix": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "STRING",
          "value": "::"
        }
      ]
    },
    "keyword_namespace": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[a-zA-Z*!_?$%&=<>'\\-+.#0-9][a-zA-Z*!_?$%&=<>'\\-+.#0-9:]*"
      }
    },
    "keyword_name": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[a-zA-Z*!_?$%&=<>'\\-+.#0-9][a-zA-Z*!_?$%&=<>'\\-+.#0-9:]*"
      }
    },
    "keyword": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "keyword_prefix"
        },
        {
          "type": "SYMBOL",
          "name": "keyword_name"
        }
      ]
    },
    "namespaced_keyword": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "keyword_prefix"
        },
        {
          "type": "SYMBOL",
          "name": "keyword_namespace"
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "/"
          }
        },
        {
          "type": "SYMBOL",
          "name": "keyword_name"
        }
      ]
    },
    "nil": {
      "type": "STRING",
      "value": "nil"
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "character": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_named"
        },
        {
          "type": "SYMBOL",
          "name": "_unicode"
        },
        {
          "type": "SYMBOL",
          "name": "_octal"
        },
        {
          "type": "SYMBOL",
          "name": "_any"
        }
      ]
    },
    "_unicode": {
      "type": "PATTERN",
      "value": "\\\\u[0-9D-Fd-f][0-9a-fA-F]{3}"
    },
    "_octal": {
      "type": "PATTERN",
      "value": "\\\\o[0-3][0-7]{2}"
    },
    "_any": {
      "type": "PATTERN",
      "value": "\\\\."
    },
    "_named": {
      "type": "PATTERN",
      "value": "\\\\(newline|return|space|tab|formfeed|backspace)"
    },
    "number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_int"
        },
        {
          "type": "SYMBOL",
          "name": "_ratio"
        },
        {
          "type": "SYMBOL",
          "name": "_float"
        }
      ]
    },
    "_int": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "0"
            },
            {
              "type": "PATTERN",
              "value": "([+-]?[1-9][0-9]*)"
            },
            {
              "type": "PATTERN",
              "value": "[+-]?0[xX]([0-9A-Fa-f]+)"
            },
            {
              "type": "PATTERN",
              "value": "[+-]?0([0-7]+)"
            },
            {
              "type": "PATTERN",
              "value": "[+-]?([1-9][0-9]?)[rR]([0-9A-Za-z]+)"
            },
            {
              "type": "PATTERN",
              "value": "[+-]?0[0-9]+"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "N"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_ratio": {
      "type": "PATTERN",
      "value": "([-+]?[0-9]+)\\/([0-9]+)"
    },
    "_float": {
      "type": "PATTERN",
      "value": "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?"
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_form"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "vector": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_form"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "map": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "#::"
                },
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "#:"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_symbol"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_form"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "[\\s,]"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": []
}